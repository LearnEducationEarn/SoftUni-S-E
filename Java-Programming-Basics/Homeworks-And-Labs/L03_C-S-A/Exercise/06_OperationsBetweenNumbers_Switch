
package L03_ConditionalStatementsAdvanced_EXC;

import java.util.Scanner;

public class P06_OperationsBetweenNumbers {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n1 = Integer.parseInt(scanner.nextLine());
        int n2 = Integer.parseInt(scanner.nextLine());
        String operator = scanner.nextLine();
        int operatorSolve = 0;
        switch (operator) {
            case "+":
                operatorSolve = n1 + n2;
                if (operatorSolve % 2 == 0) {
                    System.out.printf("%d + %d = %d - even", n1, n2, operatorSolve);

                } else {
                    System.out.printf("%d + %d = %d - odd", n1, n2, operatorSolve);
                }
                break;
            case "-":
                operatorSolve = n1 - n2;
                if (operatorSolve % 2 == 0) {
                    System.out.printf("%d %s %d = %d - even", n1, operator, n2, operatorSolve);
                } else {
                    System.out.printf("%d - %d = %d - odd", n1, n2, operatorSolve);
                }
                break;
            case "*":
                operatorSolve = n1 * n2;
                if (operatorSolve % 2 == 0) {
                    System.out.printf("%d * %d = %d - even", n1, n2, operatorSolve);
                } else {
                    System.out.printf("%d * %d = %d - odd", n1, n2, operatorSolve);
                }
                break;
            case "/":
                if (n2 == 0) {
                    System.out.printf("Cannot divide %d by zero", n1);
                } else {
                    double division = n1 * 1.0 / n2 ;
                    System.out.printf("%d %s %d = %.2f", n1, operator, n2, division);
                }
                break;
            case "%":
                if (n2 == 0) {
                    System.out.printf("Cannot divide %d by zero", n1);

                } else {
                    operatorSolve = n1 % n2;
                    System.out.printf("%d %% %d = %d", n1, n2, operatorSolve);
                }
                break;
        }


    }
}
