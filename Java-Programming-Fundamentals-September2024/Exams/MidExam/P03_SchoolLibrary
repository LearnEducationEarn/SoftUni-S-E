package MidExam;

import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;

public class P03_SchoolLibrary {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

       List<String> shelfWithBooks = Arrays.stream(scanner.nextLine().split("&")).collect(Collectors.toList());


       String command = scanner.nextLine();
       while (!command.equals("Done")) {

           String[] commandParts = command.split(" \\| ");
           String currentCommand = commandParts[0];

           switch (currentCommand) {

               case "Add Book":

                   String bookToAdd = commandParts[1];
                   boolean isBookExist = checkIfItemExist(shelfWithBooks, bookToAdd);

                   if (!isBookExist) {

                       shelfWithBooks.add(0, bookToAdd);
                   }

                   break;

               case "Take Book":

                   String bookToTake = commandParts[1];
                   boolean isBookExists = checkIfItemExist(shelfWithBooks, bookToTake);

                   if (isBookExists) {

                       shelfWithBooks.remove(bookToTake);
                   }

                   break;

               case "Swap Books":

                   String firstBookToSwap = commandParts[1];
                   String secondBookToSwap = commandParts[2];
                   boolean isFirstBookExists = checkIfItemExist(shelfWithBooks, firstBookToSwap);
                   boolean isSecondBookExists = checkIfItemExist(shelfWithBooks, secondBookToSwap);

                   int firstBookIndex = shelfWithBooks.indexOf(firstBookToSwap);
                   int secondBookIndex = shelfWithBooks.indexOf(secondBookToSwap);
                   if (isFirstBookExists && isSecondBookExists) {

                       shelfWithBooks.set(firstBookIndex, secondBookToSwap);
                       shelfWithBooks.set(secondBookIndex, firstBookToSwap);

                   }

                   break;

               case "Insert Book":

                   String bookToInsert = commandParts[1];

                   if (!checkIfItemExist(shelfWithBooks, bookToInsert)) {

                       shelfWithBooks.add(bookToInsert);
                   }

                   break;

               case "Check Book":

                   String bookToCheck = commandParts[1];
                   int indexOfBook = shelfWithBooks.indexOf(bookToCheck);
                   boolean isIndexValid = indexOfBook >= 0 && indexOfBook <= shelfWithBooks.size() - 1;

                   if (checkIfItemExist(shelfWithBooks, bookToCheck)) {

                       if (isIndexValid) {

                           System.out.println(bookToCheck);

                       }
                   }

                   break;


           }

           command = scanner.nextLine();
       }

        System.out.println(String.join(", ", shelfWithBooks));

    }

    private static boolean checkIfItemExist(List<String> groceriesList, String item) {

        for (String product : groceriesList) {

            if (product.equals(item)) {

                return true;
            }
        }
        return false;
    }


}

